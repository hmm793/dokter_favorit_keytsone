// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "postgresql"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model User {
  id                      String        @id @default(uuid()) @postgresql.Uuid
  name                    String        @default("")
  email                   String        @unique @default("")
  description             String        @default("")
  phoneNumber             String        @default("")
  role                    String?
  photoProfile_filesize   Int?
  photoProfile_extension  String?
  photoProfile_width      Int?
  photoProfile_height     Int?
  photoProfile_id         String?
  department              Department?   @relation("User_department", fields: [departmentId], references: [id])
  departmentId            String?       @map("department") @postgresql.Uuid
  password                String
  from_Appointment_doctor Appointment[] @relation("Appointment_doctor")
  from_Appointment_pasien Appointment[] @relation("Appointment_pasien")

  @@index([departmentId])
}

model Department {
  id                          String        @id @default(uuid()) @postgresql.Uuid
  name                        String        @default("")
  user                        User[]        @relation("User_department")
  from_Appointment_department Appointment[] @relation("Appointment_department")
}

model Appointment {
  id             String       @id @default(uuid()) @postgresql.Uuid
  department     Department[] @relation("Appointment_department")
  doctor         User?        @relation("Appointment_doctor", fields: [doctorId], references: [id])
  doctorId       String?      @map("doctor") @postgresql.Uuid
  pasien         User?        @relation("Appointment_pasien", fields: [pasienId], references: [id])
  pasienId       String?      @map("pasien") @postgresql.Uuid
  catatanKeluhan String       @default("")
  start          DateTime?
  end            DateTime?
  grandTotal     Int?

  @@index([doctorId])
  @@index([pasienId])
}

model Schedule {
  id    String   @id @default(uuid()) @postgresql.Uuid
  start DateTime
  end   DateTime
}